// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/go-faster/errors"

	"github.com/ogen-go/ogen/validate"
)

func (s CreateTransactionSourceType) Validate() error {
	switch s {
	case "game":
		return nil
	case "server":
		return nil
	case "payment":
		return nil
	default:
		return errors.Errorf("invalid value: %v", s)
	}
}
func (s *Transaction) Validate() error {
	var failures []validate.FieldError
	if err := func() error {
		if err := s.State.Validate(); err != nil {
			return err
		}
		return nil
	}(); err != nil {
		failures = append(failures, validate.FieldError{
			Name:  "state",
			Error: err,
		})
	}
	if err := func() error {
		if err := (validate.Float{}).Validate(float64(s.Amount)); err != nil {
			return errors.Wrap(err, "float")
		}
		return nil
	}(); err != nil {
		failures = append(failures, validate.FieldError{
			Name:  "amount",
			Error: err,
		})
	}
	if len(failures) > 0 {
		return &validate.Error{Fields: failures}
	}
	return nil
}
func (s TransactionState) Validate() error {
	switch s {
	case "Win":
		return nil
	case "Lost":
		return nil
	default:
		return errors.Errorf("invalid value: %v", s)
	}
}
